plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
}

apply from: "${rootProject.projectDir}/gradle/publish.gradle"
apply from: "../sim.gradle"

project.ext.set("nativeLibsDir", "$buildDir/libs/natives")

configurations {
    nativeBundle
}

application {
    mainClassName "frckit.simulation.simj.SimJKt"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "org.ode4j:core:0.4.0"

    implementation "org.openjfx:javafx-base:15.0.1:win"
    implementation "org.openjfx:javafx-base:15.0.1:mac"
    implementation "org.openjfx:javafx-base:15.0.1:linux"

    implementation "org.openjfx:javafx-graphics:15.0.1:win"
    implementation "org.openjfx:javafx-graphics:15.0.1:mac"
    implementation "org.openjfx:javafx-graphics:15.0.1:linux"

    implementation "org.openjfx:javafx-controls:15.0.1:win"
    implementation "org.openjfx:javafx-controls:15.0.1:mac"
    implementation "org.openjfx:javafx-controls:15.0.1:linux"

    // https://mvnrepository.com/artifact/org.knowm.xchart/xchart
    implementation group: 'org.knowm.xchart', name: 'xchart', version: '3.8.0'

    // https://mvnrepository.com/artifact/net.java.jinput/jinput
    implementation group: 'net.java.jinput', name: 'jinput', version: '2.0.9'
    nativeBundle "net.java.jinput:jinput-platform:2.0.7:natives-windows"


}

task extractNativeBundle(type: Sync) {
    from {
        configurations.nativeBundle.collect { zipTree(it) }
    }
    into file(project.nativeLibsDir)
}

classes.dependsOn extractNativeBundle

tasks.withType(JavaExec) {
    systemProperty "java.library.path", project.nativeLibsDir
}
